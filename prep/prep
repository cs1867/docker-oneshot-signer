#!/bin/sh -e


# This bit was shamelessly stolen from Unibuild.

# Set an OSINFO macro
set_osinfo_macro()
{
    eval export "OSINFO_$1=\"$2\""
}

set_osinfo_macro OS "$(uname -s)"

# This page has some useful information about figuring out what
# distribution you're running:
# http://linuxmafia.com/faq/Admin/release-files.html

if [ -e '/etc/redhat-release' ]; then

    set_osinfo_macro FAMILY RedHat
    set_osinfo_macro PACKAGING rpm
    # Lsb_release vanished in EL9.  Do this stuff the hard way.
    set_osinfo_macro DISTRO "$(source /etc/os-release && echo $ID)"
    set_osinfo_macro RELEASE "$(sed -e 's/^.*release\s\+//i; s/\s.*$//' /etc/redhat-release)"
    set_osinfo_macro CODENAME "$(sed -e 's/^.*[(]\([^)]\+\)[)].*$/\1/' /etc/redhat-release)"

elif [ -e '/etc/debian_version' ]; then

    set_osinfo_macro FAMILY Debian
    set_osinfo_macro PACKAGING deb
    set_osinfo_macro DISTRO "$(awk -F= '$1 == "NAME" { print $2 }' /etc/os-release | tr -d '"' | sed -e 's/\s.*$//' )"
    set_osinfo_macro RELEASE "$(awk -F= '$1 == "VERSION_ID" { print $2 }' /etc/os-release \
    		     | tr -d '"')"
    set_osinfo_macro CODENAME "$(awk -F= '$1 == "VERSION" { print $2 }' /etc/os-release \
    		     | sed -e 's/^.*[(]\(.*\)[)].*$/\1/')"

else

    echo "This OS family is not supported."
    exit 1

fi

# End Unibuild thievery

set_osinfo_macro RELEASE_MAJOR "$(echo "${OSINFO_RELEASE}" | sed -e 's/\..*$//')"


WHEREAMI=$(dirname "$0")

echo
echo PREPARING CONTAINER
echo

for SUFFIX in '' '-post'
do
    for SCRIPT in \
	${OSINFO_OS} \
	    ${OSINFO_OS}-${OSINFO_FAMILY} \
	    ${OSINFO_OS}-${OSINFO_FAMILY}-${OSINFO_RELEASE_MAJOR} \
	    ${OSINFO_OS}-${OSINFO_FAMILY}-${OSINFO_RELEASE_MAJOR}-${OSINFO_DISTRO}
    do
	TO_RUN="${WHEREAMI}/${SCRIPT}${SUFFIX}"
	if [ -x "${TO_RUN}" ]
	then
	    echo "Doing prep for ${SCRIPT}${SUFFIX}:"
	    echo
	    ${TO_RUN}
	    echo
	fi
    done
done

echo
echo PREP COMPLETE
echo
